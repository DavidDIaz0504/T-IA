# -*- coding: utf-8 -*-
"""SVC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d1oA-MWKVVYRvwpmDtNLdrts88__9mzE

# Importamos librerias
"""

import numpy as np
import random
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
import joblib as jb

"""# Datas"""

digits=load_digits()
digits

for i in range (0,20):
  imagen=digits.data[i].reshape(8,8)
  plt.figure(figsize=(1,1))
  plt.imshow(imagen, cmap='gray')
  plt.title(str(digits.target[i]))

"""# Entrenamiento del modelo SVC/SVM"""

Xtrain,Xtest,y_train,y_test=train_test_split(digits.data,digits.target, random_state=444)

digitosM=SVC(kernel='rbf')
digitosM=digitosM.fit(Xtrain,y_train)

jb.dump(digitosM,"ModelDigitos.bin")

# Calcular el score en el conjunto de entrenamiento
train_score = digitosM.score(Xtrain, y_train)

# Calcular el score en el conjunto de prueba
test_score = digitosM.score(Xtest, y_test)

print("Score en conjunto de entrenamiento:", train_score)
print("Score en conjunto de prueba:", test_score)

"""# Predicciones"""

# Cargar el modelo entrenado
digitosM = jb.load("ModelDigitos.bin")

# Seleccionar aleatoriamente 3 índices de imágenes
indices_seleccionados = random.sample(range(len(digits.data)), 3)

# Crear nuevos datos a partir de las imágenes seleccionadas
nuevos_datos = digits.data[indices_seleccionados]

# Aplanar las imágenes
nuevos_datos_aplanados = nuevos_datos.reshape(len(nuevos_datos), -1)

# Realizar predicciones
predicciones = digitosM.predict(nuevos_datos)

# Mostrar las imágenes y las predicciones
plt.figure(figsize=(10, 4))
for i in range(len(nuevos_datos)):
    imagen = nuevos_datos[i].reshape(8, 8)
    plt.subplot(1, len(nuevos_datos), i + 1)
    plt.imshow(imagen, cmap='gray', interpolation='nearest')
    plt.title(f'Predicción: {predicciones[i]}')
    plt.axis('off')
plt.show()

print("Predicciones:")
print(predicciones)